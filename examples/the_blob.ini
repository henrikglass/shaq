[Blob]
source                     = examples/shaders/blob.glsl
uniform sampler2D tex      = last_output_of_ex("Blob", GL_LINEAR, GL_CLAMP_TO_EDGE)
uniform ivec2 iresolution  = iresolution()
uniform float blobbiness   = slider_float_log("Blobbiness", 0.001, 0.300, 0.150)
uniform float sharpness    = slider_float_log("Sharpness", 1.0, 7.0, 6.1)
uniform float persistance  = slider_float("Persistance", 0.001, 0.990, 0.97)
uniform bool reloaded  = shaq_reloaded_this_frame()
uniform vec3 blob0  = vec3(perlin3D(0.1*time(),   0.4, 312.0)*2.0 - 1.0, perlin3D(  0.4, 0.1*time(), 312.0)*2.0 - 1.0, (0.1 + 0.13*(sin(0.9*time() + 2.0*PI*0.123) + 1.0)))
uniform vec3 blob1  = vec3(perlin3D(0.1*time(),  14.4,  23.0)*2.0 - 1.0, perlin3D( 14.4, 0.1*time(),  23.0)*2.0 - 1.0, (0.1 + 0.12*(sin(0.7*time() + 2.0*PI*0.628) + 1.0)))
uniform vec3 blob2  = vec3(perlin3D(0.1*time(), 234.1, 104.0)*2.0 - 1.0, perlin3D(234.1, 0.1*time(), 104.0)*2.0 - 1.0, (0.1 + 0.12*(sin(0.8*time() + 2.0*PI*0.185) + 1.0)))
uniform vec3 blob3  = vec3(perlin3D(0.1*time(),  23.3, 941.0)*2.0 - 1.0, perlin3D( 23.3, 0.1*time(), 941.0)*2.0 - 1.0, (0.1 + 0.13*(sin(0.2*time() + 2.0*PI*0.916) + 1.0)))
uniform vec3 blob4  = vec3(perlin3D(0.1*time(),  94.1, 230.0)*2.0 - 1.0, perlin3D( 94.1, 0.1*time(), 230.0)*2.0 - 1.0, (0.1 + 0.12*(sin(0.6*time() + 2.0*PI*0.713) + 1.0)))
uniform vec3 blob5  = vec3(perlin3D(0.1*time(), 123.4, 501.0)*2.0 - 1.0, perlin3D(123.4, 0.1*time(), 501.0)*2.0 - 1.0, (0.1 + 0.12*(sin(0.8*time() + 2.0*PI*0.720) + 1.0)))
uniform vec3 blob6  = vec3(perlin3D(0.1*time(), 321.4,  18.0)*2.0 - 1.0, perlin3D(321.4, 0.1*time(),  18.0)*2.0 - 1.0, (0.1 + 0.11*(sin(0.4*time() + 2.0*PI*0.420) + 1.0)))
uniform vec3 blob7  = vec3(perlin3D(0.1*time(), 925.4, 179.0)*2.0 - 1.0, perlin3D(925.4, 0.1*time(), 179.0)*2.0 - 1.0, (0.1 + 0.13*(sin(0.7*time() + 2.0*PI*0.960) + 1.0)))
uniform vec3 blob8  = vec3(perlin3D(0.1*time(), 239.4, 641.0)*2.0 - 1.0, perlin3D(239.4, 0.1*time(), 641.0)*2.0 - 1.0, (0.1 + 0.12*(sin(0.1*time() + 2.0*PI*0.690) + 1.0)))
uniform vec3 blob9  = vec3(perlin3D(0.1*time(),   0.0, 208.0)*2.0 - 1.0, perlin3D(  0.0, 0.1*time(), 208.0)*2.0 - 1.0, (0.1 + 0.11*(sin(0.4*time() + 2.0*PI*0.100) + 1.0)))

[Gradient]
source                            = examples/shaders/gradient.glsl
uniform ivec2 iresolution         = iresolution()
uniform sampler2D input_texture   = output_of("Blob")
uniform vec4 gradient_1           = color_picker("gradient #1", rgba(0x000000FF))
uniform vec4 gradient_2           = color_picker("gradient #2", rgba(0x353A87FF))
uniform vec4 gradient_3           = color_picker("gradient #3", rgba(0xD900FFFF))
uniform vec4 gradient_4           = color_picker("gradient #4", rgba(0xFFFFFFFF))
uniform int n_gradients           = input_int("# of gradients to use", 4)
uniform bool use_gamma            = checkbox("Apply gamma function", TRUE)
uniform float gamma               = slider_float_log("gamma", 0.1, 10.0, PHI/2.0)
